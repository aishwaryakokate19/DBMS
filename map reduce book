db.Book.insertMany([
    { "Title": "Book A", "Author_name": "Author 1", "Borrowed_status": true, "Price": 350 },
    { "Title": "Book B", "Author_name": "Author 2", "Borrowed_status": false, "Price": 250 },
    { "Title": "Book C", "Author_name": "Author 1", "Borrowed_status": true, "Price": 400 },
    { "Title": "Book D", "Author_name": "Author 3", "Borrowed_status": false, "Price": 150 },
    { "Title": "Book E", "Author_name": "Author 2", "Borrowed_status": true, "Price": 320 },
    { "Title": "Book F", "Author_name": "Author 1", "Borrowed_status": false, "Price": 450 }
]);


Display Author-wise List of Books
For this requirement, we need to group the books by Author_name and list the book titles.

Map Function:
var mapFunction1 = function() {
    emit(this.Author_name, this.Title); // Emit Author_name as the key and Title as the value
};



Reduce Function:
var reduceFunction1 = function(author, titles) {
    return titles; // Return the list of book titles for each author
};

Run MapReduce:
db.Book.mapReduce(
    mapFunction1,
    reduceFunction1,
    { out: "authorwise_books" }
);






. Display Author-wise List of Books Having Price Greater Than 300
For this requirement, we need to modify the map function to check if the price of the book is greater than 300.

Map Function:

var mapFunction3 = function() {
    if (this.Price > 300) {
        emit(this.Author_name, this.Title); // Emit Author_name and Title for books with price > 300
    }
};
Reduce Function:

var reduceFunction3 = function(author, titles) {
    return titles; // Return the list of book titles with price greater than 300 for each author
};
Run MapReduce:

db.Book.mapReduce(
    mapFunction3,
    reduceFunction3,
    { out: "authorwise_books_price_above_300" }
);
