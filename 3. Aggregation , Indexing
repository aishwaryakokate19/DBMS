use MovieDatabase  // Create and switch to the database

db.createCollection("Movies_Data")  // Create the Movies_Data collection


db.Movies_Data.insertMany([
  { Movie_ID: 1, Movie_Name: "Inception", Director: "Christopher Nolan", Genre: "Sci-Fi", BoxOfficeCollection: 830000000 },
  { Movie_ID: 2, Movie_Name: "Interstellar", Director: "Christopher Nolan", Genre: "Sci-Fi", BoxOfficeCollection: 700000000 },
  { Movie_ID: 3, Movie_Name: "Dunkirk", Director: "Christopher Nolan", Genre: "War", BoxOfficeCollection: 500000000 },
  { Movie_ID: 4, Movie_Name: "Pulp Fiction", Director: "Quentin Tarantino", Genre: "Crime", BoxOfficeCollection: 214000000 },
  { Movie_ID: 5, Movie_Name: "Kill Bill", Director: "Quentin Tarantino", Genre: "Action", BoxOfficeCollection: 180000000 },
  { Movie_ID: 6, Movie_Name: "Avatar", Director: "James Cameron", Genre: "Sci-Fi", BoxOfficeCollection: 2790000000 },
  { Movie_ID: 7, Movie_Name: "Titanic", Director: "James Cameron", Genre: "Romance", BoxOfficeCollection: 2187000000 },
  { Movie_ID: 8, Movie_Name: "The Godfather", Director: "Francis Ford Coppola", Genre: "Crime", BoxOfficeCollection: 245000000 },
  { Movie_ID: 9, Movie_Name: "The Dark Knight", Director: "Christopher Nolan", Genre: "Action", BoxOfficeCollection: 1000000000 },
  { Movie_ID: 10, Movie_Name: "Once Upon a Time in Hollywood", Director: "Quentin Tarantino", Genre: "Comedy", BoxOfficeCollection: 374000000 }
]);

Display How Many Movies Are Directed by Each “Director”

db.Movies_Data.aggregate([
  {
    $group: {
      _id: "$Director",  // Group by Director
      totalMovies: { $count: {} }  // Count the number of movies per director
    }
  }
]);

Display Movies with the Highest BoxOfficeCollection in Each Genre

db.Movies_Data.aggregate([
  {
    $group: {
      _id: "$Genre",  // Group by Genre
      maxBoxOffice: { $max: "$BoxOfficeCollection" }  // Find the highest BoxOfficeCollection
    }
  },
  {
    $lookup: {
      from: "Movies_Data",  // Join with Movies_Data collection
      localField: "maxBoxOffice", 
      foreignField: "BoxOfficeCollection", 
      as: "highestGrossingMovies"
    }
  },
  { $unwind: "$highestGrossingMovies" },
  {
    $project: {
      Genre: "$_id",  // Include Genre
      Movie_Name: "$highestGrossingMovies.Movie_Name",  // Include Movie_Name
      BoxOfficeCollection: "$maxBoxOffice"  // Include BoxOfficeCollection
    }
  }
]);

 Create Index on Field Movie_ID

 db.Movies_Data.createIndex({ Movie_ID: 1 });

 Drop an Index on Field Movie_ID
 
 db.Movies_Data.dropIndex({ Movie_ID: 1 });

